unit uDtmServidor;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.SQLite,
  FireDAC.Phys.SQLiteDef, FireDAC.Stan.ExprFuncs,
  FireDAC.Phys.SQLiteWrapper.Stat, FireDAC.FMXUI.Wait, Data.DB,
  FireDAC.Comp.Client, System.IOUtils, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, FireDAC.Comp.DataSet, REST.Types,
  REST.Client, Data.Bind.Components, Data.Bind.ObjectScope;

type
  TdtmServidor = class(TDataModule)
    fdConexao: TFDConnection;
    qryGeral: TFDQuery;
    RESTRequest1: TRESTRequest;
    RESTClient1: TRESTClient;
    RESTResponse1: TRESTResponse;
    procedure DataModuleCreate(Sender: TObject);
    procedure fdConexaoAfterConnect(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dtmServidor: TdtmServidor;

implementation

{%CLASSGROUP 'FMX.Controls.TControl'}

{$R *.dfm}

procedure TdtmServidor.DataModuleCreate(Sender: TObject);
begin
   with fdConexao do
   begin
      Params.Values['DriverID'] := 'SQLite';

      {$IFDEF MSWINDOWS}
      Params.Values['Database'] := System.SysUtils.GetCurrentDir + '\Banco\LarSolidario.db';
      {$ELSE}
      Params.Values['Database'] := TPath.Combine(TPath.GetDocumentsPath, 'LarSolidario.db');
      {$ENDIF}

       try
          fdConexao.Connected := true;
       except
          on e:exception do
          begin
             raise Exception.Create('Erro de conexão com o banco de dados: ' + e.Message);
          end;
       end;
   end;
end;

procedure TdtmServidor.fdConexaoAfterConnect(Sender: TObject);
begin
//   fdConexao.ExecSQL('drop table if exists pessoa');
//   fdConexao.ExecSQL('drop table if exists motivos');
//   fdConexao.ExecSQL('drop table if exists lartemporario');
//   fdConexao.ExecSQL('drop table if exists animais');
//   fdConexao.ExecSQL('drop table if exists solicitacoes');

   fdConexao.ExecSQL(' CREATE TABLE IF NOT EXISTS Pessoa (       		 '+
                     ' Cod_Pessoa INTEGER PRIMARY KEY AUTOINCREMENT, '+
                     ' Nome TEXT NOT NULL,                           '+
                     ' Telefone TEXT,                                '+
                     ' CEP TEXT,                                     '+
                     ' Rua TEXT,                                     '+
                     ' Cidade TEXT,                                  '+
                     ' Estado TEXT,                                  '+
                     ' Email TEXT,                                   '+
                     ' Senha TEXT,                                   '+
                     ' Bairro TEXT,                                  '+
                     ' Ind_Ativo INTEGER,                            '+
                     ' Numero TEXT                                   '+
                     ');                                             ');

   fdConexao.ExecSQL(' CREATE TABLE IF NOT EXISTS Motivos (          '+
                     ' Cod_Motivo INTEGER PRIMARY KEY AUTOINCREMENT, '+
                     ' Descricao TEXT NOT NULL,                      '+
                     ' Status INTEGER                                '+
                     ');                                             ');

  fdConexao.ExecSQL(' CREATE TABLE IF NOT EXISTS LarTemporario (             '+
                    ' Cod_Lar INTEGER PRIMARY KEY AUTOINCREMENT,             '+
                    ' Nome_Pessoa TEXT NOT NULL,                             '+
                    ' CEP TEXT,                                              '+
                    ' Endereco TEXT,                                         '+
                    ' Telefone TEXT,                                         '+
                    ' Cidade TEXT,                                           '+
                    ' Quantidade INTEGER,                                    '+
                    ' Informacoes TEXT,                                      '+
                    ' Tipo_Animal TEXT,                                      '+
                    ' Ind_Tela INTEGER,                                      '+
                    ' Ind_Ativo INTEGER,                                     '+
                    ' Cod_Pessoa INTEGER,                                    '+
                    ' FOREIGN KEY (Cod_Pessoa) REFERENCES Pessoa(Cod_Pessoa) '+
                    ' );                                                     ');

  fdConexao.ExecSQL(' CREATE TABLE IF NOT EXISTS Animais (									   '+
                    ' Cod_Animal INTEGER PRIMARY KEY AUTOINCREMENT,            '+
                    ' Nome TEXT NOT NULL,                                      '+
                    ' Genero TEXT,                                             '+
                    ' Idade TEXT,                                              '+
                    ' Cor_Pelagem TEXT,                                        '+
                    ' Ind_Ativo INTEGER,                                       '+
                    ' Ind_Castrado INTEGER,                                    '+
                    ' Foto BLOB,                                               '+
                    ' Tipo_Animal TEXT,                                        '+
                    ' Informacoes TEXT,                                        '+
                    ' Situacao TEXT,                                           '+
                    ' CEP TEXT,                                                '+
                    ' Endereco TEXT,                                           '+
                    ' Cidade TEXT,                                             '+
                    ' Cod_Lar INTEGER,                                         '+
                    ' Cod_Pessoa INTEGER,                                      '+
                    ' FOREIGN KEY (Cod_Lar) REFERENCES LarTemporario(Cod_Lar), '+
                    ' FOREIGN KEY (Cod_Pessoa) REFERENCES Pessoa(Cod_Pessoa)   '+
                    ' );                                                       ');

  fdConexao.ExecSQL(' CREATE TABLE IF NOT EXISTS Solicitacoes (                '+
                    ' Cod_Solicitacao INTEGER PRIMARY KEY AUTOINCREMENT,       '+
                    ' Tipo_Solicitacao TEXT,                                   '+
                    ' Status INTEGER,                                          '+
                    ' Cod_Motivo INTEGER,                            '+
                    ' Cod_Pessoa INTEGER,                            '+
                    ' Cod_Lar INTEGER,                       '+
                    ' FOREIGN KEY (Cod_Motivo) REFERENCES Motivos(Cod_Motivo), '+
                    ' FOREIGN KEY (Cod_Pessoa) REFERENCES Pessoa(Cod_Pessoa),  '+
                    ' FOREIGN KEY (Cod_Lar) REFERENCES LarTemporario(Cod_Lar)  '+
                    ' );                                                       ');
end;

end.
